name: Release to npm

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '16'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'

    - name: Install semver
      run: npm install -g semver

    - name: Get previous version
      id: get_previous_version
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        echo ::set-output name=previous_version::$(yarn info @hyperplay/ui version | sed -n 2p | tr -d '[:space:]')

    - name: Set current version
      id: set_current_version
      run: echo ::set-output name=current_version::$(node -p "require('./packages/ui/package.json').version")

    - name: Compare versions
      id: compare_versions
      env:
        PREVIOUS_VERSION: ${{ steps.get_previous_version.outputs.previous_version }}
        CURRENT_VERSION: ${{ steps.set_current_version.outputs.current_version }}
      run: echo ::set-output name=do_release::$(node -p "Number(process.env.INPUT_FORCE_RELEASE) || require('semver/functions/gt')(process.env.PREVIOUS_VERSION, process.env.CURRENT_VERSION)")

    - name: Install dependencies
      if: steps.compare_versions.outputs.do_release == 'true'
      run: |
        yarn install --immutable --frozen-lockfile

    - name: Build @hyperplay/ui
      if: steps.compare_versions.outputs.do_release == 'true'
      run: |
        npx turbo run build --filter=@hyperplay/ui

    - name: Release to npm
      if: steps.compare_versions.outputs.do_release == 'true'
      run: |
        cd packages/ui
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        yarn publish