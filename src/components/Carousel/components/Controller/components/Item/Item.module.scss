@use 'sass:math';

////// @TODO this animation logic should removed after A/B testing is finished

@function difference($a, $b) {
  @return calc(abs($a - $b) / (($a + $b) / 2));
}

$max-item-width: 100px;
$max-item-height: 60px;

$mid-item-width: 96px;
$mid-item-height: 56px;

$min-item-width: 92px;
$min-item-height: 52px;

$scale-mid-to-max-height: calc(
  1 + difference($mid-item-height, $max-item-height)
);
$scale-mid-to-max-width: calc(1 + difference($mid-item-width, $max-item-width));

$scale-mid-to-min-height: calc(
  1 - difference($mid-item-height, $min-item-height)
);
$scale-mid-to-min-width: calc(1 - difference($mid-item-width, $min-item-width));

.itemContainer {
  width: 96px;
  height: 56px;
  background: var(--color-neutral-600);

  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 8px;
  cursor: pointer;
  position: relative;

  &.noGradientBorder {
    border: 2px solid var(--color-neutral-600);
    overflow: hidden;
    .loader {
      display: block;
    }
  }
  &.noGradientBorder .imageContainer {
    border-radius: 6px;
    width: 100%;
    height: 100%;
  }

  &.empty {
    background: none;
    cursor: inherit;
  }
}

.root:first-child,
.root:last-child {
  position: absolute;
}

.imageContainer {
  width: 96px;
  height: 56px;
  border-radius: 8px;
  overflow: hidden;

  z-index: 1;
  position: absolute;
  transition: transform 0.3s ease-in-out, border-radius 0.3s ease-in-out;
}

.border {
  width: 96px;
  height: 56px;

  background: var(--color-stroke-02);
  border-radius: 8px;
  transition: transform 0.3s ease-in-out;
  z-index: 1;
}

.imageContainer img {
  width: 100%;
  height: 100%;
  transition: transform 0.3s ease-in-out;
}

.itemContainer:not(.noGradientBorder):hover .border,
.active:not(.noGradientBorder) .border {
  transform: scaleX($scale-mid-to-max-width) scaleY($scale-mid-to-max-height);
}

.itemContainer:not(.noGradientBorder):hover .imageContainer,
.active:not(.noGradientBorder) .imageContainer {
  transform: scaleX($scale-mid-to-min-width) scaleY($scale-mid-to-min-height);

  border-radius: 4.7px;
}

.itemContainer:not(.noGradientBorder):hover img,
.active:not(.noGradientBorder) img {
  transform: scaleX($scale-mid-to-max-width) scaleY($scale-mid-to-max-height);
}

/////////
.itemContainer.noGradientBorder {
  &:hover::after {
    background-color: var(--color-neutral-200);
    opacity: 20%;
    z-index: 1;
    position: absolute;
    inset: 0px;
    content: '';
  }

  transition: transform 0.3s ease-in-out;
  &.active {
    transform: scale(1.125, 1.125);
  }
}

.loader {
  height: 4px;
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: var(--carousel-item-initial-progress);
  background-color: var(--color-primary-300);
  animation: progress var(--carousel-item-animation-duration) linear forwards;
  z-index: 1;
  display: none;
}

@keyframes progress {
  from {
    width: var(--carousel-item-initial-progress);
  }
  to {
    width: 100%;
  }
}
